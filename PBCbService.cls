VERSION 1.0 CLASS
BEGIN
  MultiUse = -1  'True
  Persistable = 0  'NotPersistable
  DataBindingBehavior = 0  'vbNone
  DataSourceBehavior  = 0  'vbNone
  MTSTransactionMode  = 0  'NotAnMTSObject
END
Attribute VB_Name = "PBCBService"
Attribute VB_GlobalNameSpace = False
Attribute VB_Creatable = True
Attribute VB_PredeclaredId = False
Attribute VB_Exposed = False
Option Explicit
'=================================================================================
' Class Module for base module for Popbill API SDK. It include base functionality for
' RESTful web service request and parse json result. It uses Linkhub class module
' to accomplish authentication APIs.
'
' This module uses advapi32.dll and crypt32.dllm. most of windows system has it
' on system32 by default.
'
' http://www.popbill.com
' Author : Kim Seongjun (pallet027@gmail.com)
' Written : 2014-09-29
' Contributor : Jeong Yohan (code@linkhub.co.kr)
' Updated : 2019-09-26
'
' Thanks for your interest.
'=================================================================================
Private Const ServiceID_REAL = "POPBILL"
Private Const ServiceID_TEST = "POPBILL_TEST"
Private Const ServiceURL_REAL = "https://popbill.linkhub.co.kr"
Private Const ServiceURL_TEST = "https://popbill-test.linkhub.co.kr"
Private Const APIVersion = "1.0"

Private Const adTypeBinary As Long = 1
Private Const adTypeText As Long = 2
Private Const adModeReadWrite As Long = 3

Private m_IsTest As Boolean
Private m_IPRestrictOnOff As Boolean

Private m_token_Dic
Private m_Linkhub As Linkhub
Private m_scope As New Collection
Private m_LastErrCode As Long
Private m_LastErrMessage As String

Private Declare Sub CopyMemory Lib "kernel32" Alias "RtlMoveMemory" (Destination As Any, Source As Any, ByVal Length As Long)
Private Sub Class_Initialize()
    Set m_token_Dic = CreateObject("Scripting.Dictionary")
End Sub

Private Sub Class_Terminate()
    m_token_Dic.RemoveAll
    Set m_token_Dic = Nothing
End Sub

Private Function URLEncode(ByVal StringToEncode As String) As String
   Dim i                As Integer
   Dim iAsc             As Long
   Dim sTemp            As String
   
   Dim ByteArrayToEncode() As Byte
 
   ByteArrayToEncode = ADO_EncodeUTF8(StringToEncode)
   
   For i = 0 To UBound(ByteArrayToEncode)
      iAsc = ByteArrayToEncode(i)
      Select Case iAsc
         Case 32 'space
            sTemp = "+"
         Case 48 To 57, 65 To 90, 97 To 122
            sTemp = Chr(ByteArrayToEncode(i))
         Case Else
            Debug.Print iAsc
            sTemp = "%" & Hex(iAsc)
      End Select
      URLEncode = URLEncode & sTemp
   Next
 
End Function
  
'Purpose: UTF16 to UTF8 using ADO
Private Function ADO_EncodeUTF8(ByVal strUTF16 As String) As Byte()
 
   Dim objStream        As Object
   Dim Data()           As Byte
 
   Set objStream = CreateObject("ADODB.Stream")
   objStream.Charset = "utf-8"
   objStream.Mode = adModeReadWrite
   objStream.Type = adTypeText
   objStream.Open
   objStream.WriteText strUTF16
   objStream.Flush
   objStream.Position = 0
   objStream.Type = adTypeBinary
   objStream.Read 3 ' skip BOM
   Data = objStream.Read()
   objStream.Close
   ADO_EncodeUTF8 = Data
 
End Function
Private Function UniStrToUTF8(UniString) As Byte()
   ' Convert a Unicode string to a byte stream of UTF-8
   Dim BArray() As Byte
   Dim TempB() As Byte
   Dim i As Long
   Dim k As Long
   Dim TLen As Long
   Dim b1 As Byte
   Dim b2 As Byte
   Dim UTF16 As Long
   Dim j
   TLen = Len(UniString)  ' Obtain length of Unicode input string
   If TLen = 0 Then Exit Function  ' get out if there's nothing to convert
   k = 0
   For i = 1 To TLen
      ' Work out the UTF16 value of the Unicode character
      CopyMemory b1, ByVal StrPtr(UniString) + ((i - 1) * 2), 1
      CopyMemory b2, ByVal StrPtr(UniString) + ((i - 1) * 2) + 1, 1
      ' Combine the 2 bytes into the Unicode UTF-16
      UTF16 = b2  ' assign b2 to UTF16 before multiplying by 256 to avoid overflow
      UTF16 = UTF16 * 256 + b1
      ' Convert UTF-16 to 2 or 3 bytes of UTF-8
      TempB = ToUTF8(UTF16)
      ' Copy the resultant bytes to BArray
      For j = 0 To UBound(TempB)
         ReDim Preserve BArray(k)
         BArray(k) = TempB(j): k = k + 1
      Next
      ReDim TempB(0)
   Next
   UniStrToUTF8 = BArray  ' Return the resultant UTF-8 byte array
End Function

Private Function ToUTF8(ByVal UTF16 As Long) As Byte()
   ' Convert a 16bit UTF-16BE to 2 or 3 UTF-8 bytes
   Dim BArray() As Byte
   If UTF16 < &H80 Then
      ReDim BArray(0)  ' one byte UTF-8
      BArray(0) = UTF16  ' Use number as is
   ElseIf UTF16 < &H800 Then
      ReDim BArray(1)  ' two byte UTF-8
      BArray(1) = &H80 + (UTF16 And &H3F)  ' Least Significant 6 bits
      UTF16 = UTF16 \ &H40  ' Shift UTF16 number right 6 bits
      BArray(0) = &HC0 + (UTF16 And &H1F)  ' Use 5 remaining bits
   Else
      ReDim BArray(2)  ' three byte UTF-8
      BArray(2) = &H80 + (UTF16 And &H3F)  ' Least Significant 6 bits
      UTF16 = UTF16 \ &H40  ' Shift UTF16 number right 6 bits
      BArray(1) = &H80 + (UTF16 And &H3F)  ' Use next 6 bits
      UTF16 = UTF16 \ &H40  ' Shift UTF16 number right 6 bits again
      BArray(0) = &HE0 + (UTF16 And &HF)  ' Use 4 remaining bits
   End If
   ToUTF8 = BArray  ' Return UTF-8 bytes in an array
End Function
'최근 오류코드 확인
Public Property Get LastErrCode() As Long
    LastErrCode = m_LastErrCode
End Property
'최근오류메시지 확인
Public Property Get LastErrMessage() As String
    LastErrMessage = m_LastErrMessage
End Property
'테스트 플래그
Public Property Let IsTest(ByVal value As Boolean)
    m_IsTest = value
End Property

Public Property Let IPRestrictOnOff(ByVal value As Boolean)
    m_IPRestrictOnOff = value
End Property

'초기화
Public Sub Initialize(LinkID As String, SecretKey As String)
    Set m_Linkhub = New Linkhub
    
    m_Linkhub.LinkID = LinkID
    m_Linkhub.SercetKey = SecretKey
    
    m_scope.Add "member"
    ''현금영수증
    m_scope.Add "140"
    
    m_IsTest = False
    m_IPRestrictOnOff = True
    
End Sub
Private Function getSession_token(CorpNum As String) As String
    Dim refresh As Boolean
    
    refresh = False
    Dim m_Token As LinkhubToken
    
    Set m_Token = Nothing
    
    If m_token_Dic.Exists(CorpNum) Then
        Set m_Token = m_token_Dic.Item(CorpNum)
    End If
    
    If m_Token Is Nothing Then
        refresh = True
    Else
        Dim utcnow As String
        utcnow = m_Linkhub.GetTime()
        refresh = m_Token.expiration < utcnow
    End If
    
    If refresh Then
    
        Set m_Token = m_Linkhub.getToken(IIf(m_IsTest, ServiceID_TEST, ServiceID_REAL), CorpNum, m_scope, IIf(m_IPRestrictOnOff, "", "*"))
        
        If m_Token Is Nothing Then
            Err.Raise m_Linkhub.LastErrCode, "POPBILL", m_Linkhub.LastErrMessage
            Exit Function
        End If
        
        If m_token_Dic.Exists(CorpNum) Then
            m_token_Dic.Remove (CorpNum)
        End If

        m_token_Dic.Add CorpNum, m_Token
        
    End If
    
    getSession_token = m_Token.session_token
End Function

Private Function httpGET(url As String, BearerToken As String, Optional UserID As String) As Variant
     
    Dim winhttp1
    
    Set winhttp1 = CreateObject("MSXML2.XMLHTTP.6.0")
    Call winhttp1.Open("GET", IIf(m_IsTest, ServiceURL_TEST, ServiceURL_REAL) + url, False)
    
    Call winhttp1.setRequestHeader("Authorization", "Bearer " + BearerToken)
    Call winhttp1.setRequestHeader("x-pb-version", APIVersion)
    Call winhttp1.setRequestHeader("Accept-Encoding", "gzip,deflate")
    
    If UserID <> "" Then
        Call winhttp1.setRequestHeader("x-pb-userid", UserID)
    End If
    
    
    winhttp1.Send
    
    Dim Response As String
    Response = winhttp1.responseText
       
    Dim parsedDic As Object
    
    If winhttp1.Status <> 200 Then
    
        Set parsedDic = m_Linkhub.parse(Response)
        
        Err.Raise parsedDic.Item("code"), "POPBILL", parsedDic.Item("message")
        
        Exit Function
        
    End If
    
    Set winhttp1 = Nothing
    
    Set httpGET = m_Linkhub.parse(Response)
End Function

Private Function httpPOST(url As String, BearerToken As String, postdata As String, Optional UserID As String) As Variant
    Set httpPOST = httpPOST_override(url, BearerToken, "", postdata, UserID)
    
End Function

Private Function httpPOST_override(url As String, BearerToken As String, override As String, postdata As String, Optional UserID As String) As Variant
     
    Dim winhttp1
    
    Set winhttp1 = CreateObject("MSXML2.XMLHTTP.6.0")
    Call winhttp1.Open("POST", IIf(m_IsTest, ServiceURL_TEST, ServiceURL_REAL) + url, False)
    Call winhttp1.setRequestHeader("x-pb-version", APIVersion)
    Call winhttp1.setRequestHeader("Accept-Encoding", "gzip,deflate")
    
    If BearerToken <> "" Then
        Call winhttp1.setRequestHeader("Authorization", "Bearer " + BearerToken)
    End If
    
    If override <> "" Then
        Call winhttp1.setRequestHeader("X-HTTP-Method-Override", override)
    End If
    
    If UserID <> "" Then
        Call winhttp1.setRequestHeader("x-pb-userid", UserID)
    End If
    
    Call winhttp1.setRequestHeader("Content-Type", "Application/json")
    
    winhttp1.Send (postdata)
        
    Dim Response As String
    Response = winhttp1.responseText
       
    Dim parsedDic As Object
    
    If winhttp1.Status <> 200 Then
    
        Set parsedDic = m_Linkhub.parse(Response)
        
        Err.Raise parsedDic.Item("code"), "POPBILL", IIf(IsNull(parsedDic.Item("message")), "Null Exception", parsedDic.Item("message"))
        
        Exit Function
        
    End If
    
    Set winhttp1 = Nothing
    
    Set httpPOST_override = m_Linkhub.parse(Response)

End Function

Private Function GetOnlyFileName(ByVal FilePath As String) As String

     Dim Temp() As String
     Temp = Split(FilePath, "\")
     GetOnlyFileName = Split(FilePath, "\")(UBound(Temp))

End Function

Private Function httpPOST_File(url As String, BearerToken As String, postdata As String, FilePath As String, Optional UserID As String) As Variant
     
    Dim winhttp1
    Dim boundary As String
    boundary = "---------------------popbill"
    
    Set winhttp1 = CreateObject("MSXML2.XMLHTTP.6.0")
    Call winhttp1.Open("POST", IIf(m_IsTest, ServiceURL_TEST, ServiceURL_REAL) + url, False)
    Call winhttp1.setRequestHeader("x-pb-version", APIVersion)
    Call winhttp1.setRequestHeader("Accept-Encoding", "gzip,deflate")
    
    
    If BearerToken <> "" Then
        Call winhttp1.setRequestHeader("Authorization", "Bearer " + BearerToken)
    End If
    
    If UserID <> "" Then
        Call winhttp1.setRequestHeader("x-pb-userid", UserID)
    End If
    
    Call winhttp1.setRequestHeader("Content-Type", "multipart/form-data; boundary=" + boundary)
    
    
    If postdata <> "" Then
        'TODO 첨부전문 구성.
    
    End If
    
    Dim head, tail As String
    
    head = "--" & boundary & vbCrLf & _
           "Content-Disposition: form-data; name=""Filedata""; filename=""" & GetOnlyFileName(FilePath) & """" + vbCrLf & _
           "Content-Type: application/octet-stream" & vbCrLf & vbCrLf
           
    tail = vbCrLf & "--" & boundary & "--" & vbCrLf
    
    '### 이미지 바이너리를 얻는다.
    Dim binary() As Byte
    Open FilePath For Binary Access Read As #1
         ReDim binary(LOF(1))
         Get #1, , binary
    Close #1
    
    '### 전송할 데이터를 만든다.
    Dim BHeader1() As Byte, BHeader2() As Byte, Buffer() As Byte
    Dim Size1 As Long, Size2 As Long, Size3 As Long
    BHeader1 = UniStrToUTF8(head)
    BHeader2 = StrConv(tail, vbFromUnicode)
    
    Size1 = UBound(BHeader1)
    Size2 = UBound(binary)
    Size3 = UBound(BHeader2)
    
    ReDim Buffer(Size1 + Size2 + Size3 + 2)
    CopyMemory Buffer(0), BHeader1(0), Size1 + 1
    CopyMemory Buffer(Size1 + 1), binary(0), Size2 + 1
    CopyMemory Buffer(Size1 + Size2 + 2), BHeader2(0), Size3 + 1
    
    winhttp1.Send (Buffer)
        
    Dim Response As String
    Response = winhttp1.responseText
       
    Dim parsedDic As Object
    
    If winhttp1.Status <> 200 Then
    
        Set parsedDic = m_Linkhub.parse(Response)
        
        Err.Raise parsedDic.Item("code"), "POPBILL", IIf(IsNull(parsedDic.Item("message")), "Null Exception", parsedDic.Item("message"))
        
        Exit Function
        
    End If
    
    Set winhttp1 = Nothing
    
    Set httpPOST_File = m_Linkhub.parse(Response)

End Function
'연동회원 아이디 중복 확인
Public Function CheckID(IDString As String) As PBResponse
On Error GoTo ErrHandler
    If IDString = "" Then
        Err.Raise -99999999, "POPBILL", "중복여부를 확인할 아이디가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpGET("/IDCheck?ID=" + IDString, "")
    
    Set CheckID = New PBResponse
    CheckID.code = result.Item("code")
    CheckID.message = result.Item("message")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set CheckID = Nothing
End Function
'연동회원 담당자 목록조회
Public Function ListContact(CorpNum As String, Optional UserID As String = "") As Collection
On Error GoTo ErrHandler
        
    Dim result As Variant
       
    Set result = httpGET("/IDs", getSession_token(CorpNum), UserID)
    
    Set ListContact = New Collection
    
    Dim T As Variant
    Dim info As PBContactInfo
    
    For Each T In result
        Set info = New PBContactInfo
        
        info.fromDictionary T
        
        ListContact.Add info
    Next
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set ListContact = Nothing
End Function
'담당자 추가
Public Function RegistContact(CorpNum As String, ContactInfo As PBContactInfo, Optional UserID As String = "") As PBResponse
On Error GoTo ErrHandler
    Set RegistContact = Nothing
    
    Dim postdata As String
    Dim tmp
    
    Set tmp = CreateObject("Scripting.Dictionary")
    
    tmp.Add "id", ContactInfo.id
    tmp.Add "pwd", ContactInfo.pwd
    tmp.Add "personName", ContactInfo.personName
    tmp.Add "tel", ContactInfo.tel
    tmp.Add "hp", ContactInfo.hp
    tmp.Add "fax", ContactInfo.fax
    tmp.Add "email", ContactInfo.email
    tmp.Add "searchAllAllowYN", ContactInfo.searchAllAllowYN
    tmp.Add "mgrYN", ContactInfo.mgrYN
            
    postdata = m_Linkhub.toString(tmp)
    
    Dim result As Variant
    
    Set result = httpPOST("/IDs/New", getSession_token(CorpNum), postdata)
    
    Set RegistContact = New PBResponse
    
    RegistContact.code = result.Item("code")
    RegistContact.message = result.Item("message")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
End Function
'담당자 정보 수정
Public Function UpdateContact(CorpNum As String, ContactInfo As PBContactInfo, UserID As String) As PBResponse
On Error GoTo ErrHandler
    Set UpdateContact = Nothing
    
    Dim postdata As String
    Dim tmp
    
    Set tmp = CreateObject("Scripting.Dictionary")
    
    tmp.Add "id", ContactInfo.id
    tmp.Add "personName", ContactInfo.personName
    tmp.Add "tel", ContactInfo.tel
    tmp.Add "hp", ContactInfo.hp
    tmp.Add "fax", ContactInfo.fax
    tmp.Add "email", ContactInfo.email
    tmp.Add "searchAllAllowYN", ContactInfo.searchAllAllowYN
    tmp.Add "mgrYN", ContactInfo.mgrYN
            
    postdata = m_Linkhub.toString(tmp)
    
    Dim result As Variant
    
    Set result = httpPOST("/IDs", getSession_token(CorpNum), postdata, UserID)
    
    Set UpdateContact = New PBResponse
    
    UpdateContact.code = result.Item("code")
    UpdateContact.message = result.Item("message")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
End Function
'회사정보 수정
Public Function UpdateCorpInfo(CorpNum As String, CorpInfo As PBCorpInfo, Optional UserID As String = "") As PBResponse
On Error GoTo ErrHandler
    Set UpdateCorpInfo = Nothing
    
    Dim postdata As String
    Dim tmp
    
    Set tmp = CreateObject("Scripting.Dictionary")
    
    tmp.Add "ceoname", CorpInfo.ceoname
    tmp.Add "corpName", CorpInfo.corpName
    tmp.Add "addr", CorpInfo.addr
    tmp.Add "bizType", CorpInfo.bizType
    tmp.Add "bizClass", CorpInfo.bizClass
            
    postdata = m_Linkhub.toString(tmp)
    
    Dim result As Variant
    
    Set result = httpPOST("/CorpInfo", getSession_token(CorpNum), postdata, UserID)
    
    Set UpdateCorpInfo = New PBResponse
    
    UpdateCorpInfo.code = result.Item("code")
    UpdateCorpInfo.message = result.Item("message")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
End Function
'회사정보 조회
Public Function GetCorpInfo(CorpNum As String, Optional UserID As String = "") As PBCorpInfo
On Error GoTo ErrHandler
    Dim result As Variant
       
    Set result = httpGET("/CorpInfo", getSession_token(CorpNum), UserID)
    
    Set GetCorpInfo = New PBCorpInfo
        
    GetCorpInfo.fromDictionary result
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set GetCorpInfo = Nothing
End Function
'회원잔액조회
Public Function GetBalance(CorpNum As String) As Double
    On Error GoTo ErrHandler
    
    GetBalance = m_Linkhub.GetBalance(getSession_token(CorpNum), IIf(m_IsTest, ServiceID_TEST, ServiceID_REAL))
    
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetBalance = m_LastErrCode
End Function
'파트너 잔액조회
Public Function GetPartnerBalance(CorpNum As String) As Double
    On Error GoTo ErrHandler
    
    GetPartnerBalance = m_Linkhub.GetPartnerBalance(getSession_token(CorpNum), IIf(m_IsTest, ServiceID_TEST, ServiceID_REAL))
    
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetPartnerBalance = m_LastErrCode
End Function

'파트너 포인트 충전 URL - 2017/08/30 추가
Public Function GetPartnerURL(CorpNum As String, TOGO As String) As String
    On Error GoTo ErrHandler
    
    GetPartnerURL = m_Linkhub.GetPartnerURL(getSession_token(CorpNum), IIf(m_IsTest, ServiceID_TEST, ServiceID_REAL), TOGO)
    
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetPartnerURL = m_LastErrCode
End Function

'팝빌 기본 URL
Public Function GetPopbillURL(CorpNum As String, UserID As String, TOGO As String) As String
On Error GoTo ErrHandler
    Dim result As Variant
    
    Set result = httpGET("/?TG=" + TOGO, getSession_token(CorpNum), UserID)
    
    GetPopbillURL = result.Item("url")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetPopbillURL = ""
End Function

'팝빌 로그인 기본 URL
Public Function GetAccessURL(CorpNum As String, UserID As String) As String
On Error GoTo ErrHandler
   Dim result As Variant
   
   Set result = httpGET("/?TG=LOGIN", getSession_token(CorpNum), UserID)
   
   GetAccessURL = result.Item("url")
   Exit Function
ErrHandler:
   m_LastErrCode = Err.Number
   m_LastErrMessage = Err.Description
   GetAccessURL = ""
End Function

'팝빌 연동회원 포인트 충전 URL
Public Function GetChargeURL(CorpNum As String, UserID As String) As String
On Error GoTo ErrHandler
   Dim result As Variant
   
   Set result = httpGET("/?TG=CHRG", getSession_token(CorpNum), UserID)
   
   GetChargeURL = result.Item("url")
   Exit Function
ErrHandler:
   m_LastErrCode = Err.Number
   m_LastErrMessage = Err.Description
   GetChargeURL = ""
End Function
'회원가입 여부
Public Function CheckIsMember(CorpNum As String, LinkID As String) As PBResponse
On Error GoTo ErrHandler
    If CorpNum = "" Then
        Err.Raise -99999999, "POPBILL", "팝빌회원의 사업자번호가 입력되지 않았습니다."
    End If

    If LinkID = "" Then
        Err.Raise -99999999, "POPBILL", "링크아이디(LinkID)가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpGET("/Join?CorpNum=" + CorpNum + "&LID=" + LinkID, "")
    
    Set CheckIsMember = New PBResponse
    CheckIsMember.code = result.Item("code")
    CheckIsMember.message = result.Item("message")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set CheckIsMember = Nothing
End Function
'회원가입
Public Function JoinMember(JoinInfo As PBJoinForm) As PBResponse
On Error GoTo ErrHandler
    Set JoinMember = Nothing
    
    Dim postdata As String
    Dim tmp
    
    Set tmp = CreateObject("Scripting.Dictionary")
    
    tmp.Add "LinkID", JoinInfo.LinkID
    tmp.Add "CorpNum", JoinInfo.CorpNum
    tmp.Add "CorpName", JoinInfo.corpName
    tmp.Add "CEOName", JoinInfo.ceoname
    tmp.Add "Addr", JoinInfo.addr
    tmp.Add "ZipCode", JoinInfo.ZipCode
    tmp.Add "BizClass", JoinInfo.bizClass
    tmp.Add "BizType", JoinInfo.bizType
    tmp.Add "ContactName", JoinInfo.ContactName
    tmp.Add "ContactEmail", JoinInfo.ContactEmail
    tmp.Add "ContactFAX", JoinInfo.ContactFAX
    tmp.Add "ContactHP", JoinInfo.ContactHP
    tmp.Add "ContactTEL", JoinInfo.ContactTEL
    tmp.Add "ID", JoinInfo.id
    tmp.Add "PWD", JoinInfo.pwd
    
    postdata = m_Linkhub.toString(tmp)
    
    Dim result As Variant
    
    Set result = httpPOST("/Join", "", postdata)
    
    Set JoinMember = New PBResponse
    
    JoinMember.code = result.Item("code")
    JoinMember.message = result.Item("message")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
End Function
'과금정보 조회
Public Function GetChargeInfo(CorpNum As String, Optional UserID As String = "") As PBChargeInfo
On Error GoTo ErrHandler
    Dim result As Variant
       
    Set result = httpGET("/Cashbill/ChargeInfo", getSession_token(CorpNum), UserID)
    
    Set GetChargeInfo = New PBChargeInfo
        
    GetChargeInfo.fromDictionary result
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set GetChargeInfo = Nothing
End Function

'''''''''''''''''''''''''' End Of PopbillBase '''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'현금영수증 URL확인
Public Function GetURL(CorpNum As String, UserID As String, TOGO As String) As String
On Error GoTo ErrHandler
    Dim result As Variant
    
    Set result = httpGET("/Cashbill?TG=" + TOGO, getSession_token(CorpNum), UserID)
    
    GetURL = result.Item("url")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetURL = ""
End Function
'발행단가 확인
Public Function GetUnitCost(CorpNum As String) As Double
On Error GoTo ErrHandler
    Dim result As Variant
    
    Set result = httpGET("/Cashbill?cfg=UNITCOST", getSession_token(CorpNum))
    
    GetUnitCost = result.Item("unitCost")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetUnitCost = m_LastErrCode
End Function

'관려번호 사용여부 확인
Public Function CheckMgtKeyInUse(CorpNum As String, mgtKey As String) As PBResponse
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpGET("/Cashbill/" + mgtKey, getSession_token(CorpNum))
    
    Set CheckMgtKeyInUse = New PBResponse
    
    CheckMgtKeyInUse.code = IIf(IsNull(result.Item("itemKey")), 0, 1)
    CheckMgtKeyInUse.message = IIf(IsNull(result.Item("itemKey")), "미사용중", "사용중")
    
    Exit Function
ErrHandler:
    If Err.Number = -11000005 Then
        Set CheckMgtKeyInUse = New PBResponse
        CheckMgtKeyInUse.code = 0
        CheckMgtKeyInUse.message = "미사용중"
        Exit Function
    End If
    
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set CheckMgtKeyInUse = Nothing
End Function

'즉시발행
Public Function RegistIssue(CorpNum As String, Cashbill As PBCashbill, Optional UserID As String = "") As PBResponse
    On Error GoTo ErrHandler

    Dim result As Variant
    Dim tmpDic As Variant
    
    Set tmpDic = Cashbill.toDictionary
    
    Dim postdata As String
    
    postdata = m_Linkhub.toString(tmpDic)
    
    Set result = httpPOST_override("/Cashbill", getSession_token(CorpNum), "ISSUE", postdata, UserID)
    
    Set RegistIssue = New PBResponse
    
    RegistIssue.code = result.Item("code")
    RegistIssue.message = result.Item("message")
    
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set RegistIssue = Nothing
End Function
'임시저장
Public Function Register(CorpNum As String, Cashbill As PBCashbill, Optional UserID As String = "") As PBResponse
    On Error GoTo ErrHandler

    Dim result As Variant
    Dim tmpDic As Variant
    
    Set tmpDic = Cashbill.toDictionary
    
    Dim postdata As String
    
    postdata = m_Linkhub.toString(tmpDic)
    
    Set result = httpPOST("/Cashbill", getSession_token(CorpNum), postdata, UserID)
    
    Set Register = New PBResponse
    
    Register.code = result.Item("code")
    Register.message = result.Item("message")
    
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set Register = Nothing

End Function

'취소현금영수증 즉시발행. (2017/08/18)
Public Function RevokeRegistIssue(CorpNum As String, mgtKey As String, orgConfirmNum As String, orgTradeDate As String, Optional smssendYN As Boolean = False, Optional memo As String = "", Optional UserID As String = "", _
    Optional isPartCancel As Boolean = False, Optional cancelType As Integer = 0, Optional supplyCost As String = "", Optional tax As String = "", Optional serviceFee As String = "", Optional totalAmount As String = "") As PBResponse
    
    On Error GoTo ErrHandler
    
    Dim result As Variant
    Dim postdata As String
    Dim T As Variant
    
    Set T = CreateObject("Scripting.Dictionary")
    
    T.Add "mgtKey", mgtKey
    T.Add "orgConfirmNum", orgConfirmNum
    T.Add "orgTradeDate", orgTradeDate
    T.Add "smssendYN", smssendYN
    T.Add "memo", memo
    
    T.Add "isPartCancel", isPartCancel
    
    If cancelType > 0 Then
        T.Add "cancelType", cancelType
    End If
    
    T.Add "supplyCost", supplyCost
    T.Add "tax", tax
    T.Add "serviceFee", serviceFee
    T.Add "totalAmount", totalAmount
    
    postdata = m_Linkhub.toString(T)
    
    Set result = httpPOST_override("/Cashbill", getSession_token(CorpNum), "REVOKEISSUE", postdata, UserID)
    
    Set RevokeRegistIssue = New PBResponse
    
    RevokeRegistIssue.code = result.Item("code")
    RevokeRegistIssue.message = result.Item("message")
    
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set RevokeRegistIssue = Nothing
End Function

'취소현금영수증 임시저장. (2017/08/18)
Public Function RevokeRegister(CorpNum As String, mgtKey As String, orgConfirmNum As String, orgTradeDate As String, Optional smssendYN As Boolean = False, Optional UserID As String = "", _
    Optional isPartCancel As Boolean = False, Optional cancelType As Integer = 0, Optional supplyCost As String = "", Optional tax As String = "", Optional serviceFee As String = "", Optional totalAmount As String = "") As PBResponse
    On Error GoTo ErrHandler
    
    Dim result As Variant
    Dim postdata As String
    Dim T As Variant
    
    Set T = CreateObject("Scripting.Dictionary")
    
    T.Add "mgtKey", mgtKey
    T.Add "orgConfirmNum", orgConfirmNum
    T.Add "orgTradeDate", orgTradeDate
    T.Add "smssendYN", smssendYN
    
    T.Add "isPartCancel", isPartCancel
    
    If cancelType > 0 Then
        T.Add "cancelType", cancelType
    End If
    
    T.Add "supplyCost", supplyCost
    T.Add "tax", tax
    T.Add "serviceFee", serviceFee
    T.Add "totalAmount", totalAmount
    
    postdata = m_Linkhub.toString(T)
    
    Set result = httpPOST_override("/Cashbill", getSession_token(CorpNum), "REVOKE", postdata, UserID)
    
    Set RevokeRegister = New PBResponse
    
    RevokeRegister.code = result.Item("code")
    RevokeRegister.message = result.Item("message")
    
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set RevokeRegister = Nothing
End Function


'수정
Public Function Update(CorpNum As String, mgtKey As String, Cashbill As PBCashbill, Optional UserID As String = "") As PBResponse
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If

    Dim result As Variant
    
    Dim tmpDic As Variant
    
    Set tmpDic = Cashbill.toDictionary
    
    Dim postdata As String
    
    postdata = m_Linkhub.toString(tmpDic)
    
    Set result = httpPOST_override("/Cashbill/" + mgtKey, _
                                    getSession_token(CorpNum), _
                                    "PATCH", _
                                    postdata, _
                                    UserID)
    
    Set Update = New PBResponse
    
    Update.code = result.Item("code")
    Update.message = result.Item("message")
    
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set Update = Nothing

End Function
'삭제
Public Function Delete(CorpNum As String, mgtKey As String, Optional UserID As String = "") As PBResponse
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpPOST_override("/Cashbill/" + mgtKey, getSession_token(CorpNum), "DELETE", "", UserID)
    
    Set Delete = New PBResponse
    
    Delete.code = result.Item("code")
    Delete.message = result.Item("message")
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set Delete = Nothing
End Function
'발행
Public Function Issue(CorpNum As String, mgtKey As String, Optional memo As String, Optional UserID As String = "") As PBResponse
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Dim postdata As String
    Dim tmp As Variant
    Set tmp = CreateObject("Scripting.Dictionary")
    
    tmp.Add "memo", memo
    
    postdata = m_Linkhub.toString(tmp)
    
    Set result = httpPOST_override("/Cashbill/" + mgtKey, getSession_token(CorpNum), "ISSUE", postdata, UserID)
    
    Set Issue = New PBResponse
    
    Issue.code = result.Item("code")
    Issue.message = result.Item("message")
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
End Function

'발행 취소
Public Function CancelIssue(CorpNum As String, mgtKey As String, Optional memo As String, Optional UserID As String = "") As PBResponse
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Dim postdata As String
    
    postdata = "{""memo"":""" + memo + """}"
    
    Set result = httpPOST_override("/Cashbill/" + mgtKey, _
                                getSession_token(CorpNum), "CANCELISSUE", postdata, UserID)
    
    Set CancelIssue = New PBResponse
    
    CancelIssue.code = result.Item("code")
    CancelIssue.message = result.Item("message")
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
End Function

'이메일 재전송
Public Function SendEmail(CorpNum As String, mgtKey As String, Receiver As String, Optional UserID As String = "") As PBResponse
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Dim postdata As String
    
    postdata = "{""receiver"":""" + Receiver + """}"
    
    Set result = httpPOST_override("/Cashbill/" + mgtKey, _
                                getSession_token(CorpNum), "EMAIL", postdata, UserID)
    
    Set SendEmail = New PBResponse
    
    SendEmail.code = result.Item("code")
    SendEmail.message = result.Item("message")
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
End Function
'문자재선송
Public Function SendSMS(CorpNum As String, mgtKey As String, Sender As String, Receiver As String, Contents As String, Optional UserID As String = "") As PBResponse
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Dim postdata As String
    
    Dim T As Variant
    
    Set T = CreateObject("Scripting.Dictionary")
    
    T.Add "receiver", Receiver
    T.Add "sender", Sender
    T.Add "contents", Contents
    
    postdata = m_Linkhub.toString(T)
    
    Set result = httpPOST_override("/Cashbill/" + mgtKey, _
                                getSession_token(CorpNum), "SMS", postdata, UserID)
    
    Set SendSMS = New PBResponse
    
    SendSMS.code = result.Item("code")
    SendSMS.message = result.Item("message")
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
End Function
'팩스 재전송
Public Function SendFax(CorpNum As String, mgtKey As String, Sender As String, Receiver As String, Optional UserID As String = "") As PBResponse
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Dim postdata As String
    
    Dim T As Variant
    
    Set T = CreateObject("Scripting.Dictionary")
    
    T.Add "receiver", Receiver
    T.Add "sender", Sender
    
    postdata = m_Linkhub.toString(T)
    
    Set result = httpPOST_override("/Cashbill/" + mgtKey, _
                                getSession_token(CorpNum), "FAX", postdata, UserID)
    
    Set SendFax = New PBResponse
    
    SendFax.code = result.Item("code")
    SendFax.message = result.Item("message")
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
End Function
'상태/요약정보 확인
Public Function GetInfo(CorpNum As String, mgtKey As String, Optional UserID As String = "") As PBCbInfo
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpGET("/Cashbill/" + mgtKey, _
                                getSession_token(CorpNum), UserID)
    
    Set GetInfo = New PBCbInfo
    
    
    GetInfo.fromDictionary result
    
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set GetInfo = Nothing
End Function
'상태/요역정보 다량(최대1000건)확인
Public Function GetInfos(CorpNum As String, MgtKeyList As Collection, Optional UserID As String = "") As Collection
On Error GoTo ErrHandler
    If MgtKeyList Is Nothing Or MgtKeyList.Count = 0 Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Dim postdata As String
    
    postdata = m_Linkhub.toString(MgtKeyList)
    
    Set result = httpPOST("/Cashbill/States", _
                                getSession_token(CorpNum), postdata, UserID)
    
    Set GetInfos = New Collection
    
    Dim T As Variant
    Dim info As PBCbInfo
    
    For Each T In result
        Set info = New PBCbInfo
        
        info.fromDictionary T
        
        GetInfos.Add info
    
    Next
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set GetInfos = Nothing
End Function
'상세정보 확인
Public Function GetDetailInfo(CorpNum As String, mgtKey As String, Optional UserID As String = "") As PBCashbill
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpGET("/Cashbill/" + mgtKey + "?Detail", _
                                getSession_token(CorpNum), UserID)
    
    Set GetDetailInfo = New PBCashbill
    
    
    GetDetailInfo.fromDictionary result
    
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set GetDetailInfo = Nothing
End Function
'팝업URL 확인
Public Function GetPopUpURL(CorpNum As String, mgtKey As String, Optional UserID As String = "") As String
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpGET("/Cashbill/" + mgtKey + "?TG=POPUP", _
                                getSession_token(CorpNum), UserID)
    
    GetPopUpURL = result.Item("url")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetPopUpURL = ""
End Function
'인쇄 URL확인
Public Function GetPrintURL(CorpNum As String, mgtKey As String, Optional UserID As String = "") As String
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpGET("/Cashbill/" + mgtKey + "?TG=PRINT", _
                                getSession_token(CorpNum), UserID)
    
    GetPrintURL = result.Item("url")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetPrintURL = ""
End Function
'공급받는자 인쇄 URL확인
Public Function GetEPrintURL(CorpNum As String, mgtKey As String, Optional UserID As String = "") As String
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpGET("/Cashbill/" + mgtKey + "?TG=EPRINT", _
                                getSession_token(CorpNum), UserID)
    
    GetEPrintURL = result.Item("url")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetEPrintURL = ""
End Function

'메일 URL확인
Public Function GetMailURL(CorpNum As String, mgtKey As String, Optional UserID As String = "") As String
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpGET("/Cashbill/" + mgtKey + "?TG=MAIL", _
                                getSession_token(CorpNum), UserID)
    
    GetMailURL = result.Item("url")
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetMailURL = ""
End Function
'다량인쇄 URL확인
Public Function GetMassPrintURL(CorpNum As String, MgtKeyList As Collection, Optional UserID As String = "") As String
On Error GoTo ErrHandler
    If MgtKeyList Is Nothing Or MgtKeyList.Count = 0 Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Dim postdata As String
    
    postdata = m_Linkhub.toString(MgtKeyList)
    
    Set result = httpPOST("/Cashbill/Prints", _
                                getSession_token(CorpNum), postdata, UserID)
    
    GetMassPrintURL = result.Item("url")
    
    Exit Function
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    GetMassPrintURL = ""
End Function

'문서이력확인
Public Function GetLogs(CorpNum As String, mgtKey As String, Optional UserID As String = "") As Collection
On Error GoTo ErrHandler
    If mgtKey = "" Then
        Err.Raise -99999999, "POPBILL", "관리번호가 입력되지 않았습니다."
    End If
    
    Dim result As Variant
    
    Set result = httpGET("/Cashbill/" + mgtKey + "/Logs", _
                                getSession_token(CorpNum), UserID)
    
    Set GetLogs = New Collection
    
    Dim T As Variant
    Dim info As PBCbLog
    
    For Each T In result
        Set info = New PBCbLog
        
        info.fromDictionary T
        
        GetLogs.Add info
    
    Next
    
    Exit Function
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set GetLogs = Nothing
End Function

'문서 목록조회
Public Function Search(CorpNum As String, DType As String, SDate As String, EDate As String, state As Collection, tradeType As Collection, tradeUsage As Collection, taxationType As Collection, Page As Integer, PerPage As Integer, Order As String, Optional QString As String, Optional tradeOpt As Collection = Null) As PBCBSearchList
On Error GoTo ErrHandler
    Dim result As Variant
    Dim uri As String
    Dim i As Integer
    
    uri = "/Cashbill/Search"
    uri = uri + "?DType=" + DType
    uri = uri + "&SDate=" + SDate
    uri = uri + "&EDate=" + EDate
    
    If state.Count > 0 Then
        uri = uri + "&State="
        For i = 1 To state.Count
            If i = state.Count Then
                uri = uri + state(i)
            Else
                uri = uri + state(i) + ","
            End If
        Next
    End If
    
    If tradeType.Count > 0 Then
        uri = uri + "&TradeType="
        For i = 1 To tradeType.Count
            If i = tradeType.Count Then
                uri = uri + tradeType(i)
            Else
                uri = uri + tradeType(i) + ","
            End If
        Next
    End If
    
    If tradeUsage.Count > 0 Then
        uri = uri + "&TradeUsage="
        For i = 1 To tradeUsage.Count
            If i = tradeUsage.Count Then
                uri = uri + tradeUsage(i)
            Else
                uri = uri + tradeUsage(i) + ","
            End If
        Next
    End If
    
    If tradeOpt.Count > 0 Then
        uri = uri + "&TradeOpt="
        For i = 1 To tradeOpt.Count
            If i = tradeOpt.Count Then
                uri = uri + tradeOpt(i)
            Else
                uri = uri + tradeOpt(i) + ","
            End If
        Next
    End If
    
    If taxationType.Count > 0 Then
        uri = uri + "&TaxationType="
        For i = 1 To taxationType.Count
            If i = taxationType.Count Then
                uri = uri + taxationType(i)
            Else
                uri = uri + taxationType(i) + ","
            End If
        Next
    End If
    
    If QString <> "" Then
        uri = uri + "&QString=" + QString
    End If
    
    uri = uri + "&Page=" + CStr(Page)
    uri = uri + "&PerPage=" + CStr(PerPage)
    uri = uri + "&Order=" + Order
    
    Set result = httpGET(uri, getSession_token(CorpNum), "")
    
    Set Search = New PBCBSearchList
    
    Search.fromDictionary result
    
    
    Exit Function
    
    
ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set Search = Nothing
End Function

'알림메일 전송목록 조회
Public Function ListEmailConfig(CorpNum As String, Optional UserID As String = "") As Collection
    On Error GoTo ErrHandler
    
    Dim result As Variant

    Set result = httpGET("/Cashbill/EmailSendConfig", getSession_token(CorpNum), UserID)
   
    Set ListEmailConfig = New Collection
    
    Dim T As Variant
    Dim info As PBEmailConfig
    
    For Each T In result
        Set info = New PBEmailConfig
        
        info.fromDictionary T
        
        ListEmailConfig.Add info
    Next
    
    Exit Function

ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set ListEmailConfig = Nothing
End Function

'알림메일 전송설정 수정
Public Function UpdateEmailConfig(CorpNum As String, emailType As String, sendYN As Boolean, Optional UserID As String = "") As PBResponse
    On Error GoTo ErrHandler
    
    Dim result As Variant

    If emailType = "" Then
        Err.Raise -99999999, "POPBILL", "메일전송 타입이 입력되지 않았습니다."
    End If
    
    
    Set result = httpPOST("/Cashbill/EmailSendConfig?EmailType=" + emailType + "&SendYN=" + CStr(sendYN), getSession_token(CorpNum), "", UserID)
   
    Set UpdateEmailConfig = New PBResponse
    
    UpdateEmailConfig.code = result.Item("code")
    UpdateEmailConfig.message = result.Item("message")
    
    Exit Function

ErrHandler:
    m_LastErrCode = Err.Number
    m_LastErrMessage = Err.Description
    Set UpdateEmailConfig = Nothing
End Function

